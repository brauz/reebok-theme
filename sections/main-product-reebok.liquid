<section id="MainProduct-{{ section.id }}" class="page-width section-{{ section.id }}-padding" data-section="{{ section.id }}">
  {{ 'section-main-product-reebok.css' | asset_url | stylesheet_tag }}
  {{ 'size-guide.css' | asset_url | stylesheet_tag }}

  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-rte.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

  <link rel="stylesheet" href="{{ 'tabbed-content.css' | asset_url }}" media="print" onload="this.media='all'">


  {% if product.metafields.utopia.customer_facing_product_name != blank %}
    {% assign productName = product.metafields.utopia.customer_facing_product_name %}
  {% else %}
    {% assign productName = product.title %}
  {% endif %}
  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: 0;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}

  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- if section.settings.enable_quick_add -%}
    <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
    <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
    <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- endif -%}

  {% comment %} Pre release variable assignment {% endcomment %}
  {% assign dateTime = 'now' | date: '%s' %}
  {% assign releaseTime =  product.metafields.custom.release_date | date: '%s' %}
  {% assign preRelease = false %}
  {% if product.metafields.custom.pre_release and releaseTime > dateTime %}
    {% assign preRelease = true %}
    {% assign preReleaseMessage = product.metafields.custom.pre_release_message %}
  {% endif %}

  <div class="product product--{{ section.settings.media_size }} product--{{ section.settings.gallery_layout }} grid grid--1-col {% if product.media.size > 0 %}grid--1-col-tablet{% else %}product--no-media{% endif %}">
    <div class="grid__item product__media-wrapper">
      <media-gallery id="MediaGallery-{{ section.id }}" role="region" {% if section.settings.enable_sticky_info %}class="product__media-gallery"{% endif %} aria-label="{{ 'products.product.media.gallery_viewer' | t }}" data-desktop-layout="{{ section.settings.gallery_layout }}">
        
        <div id="GalleryStatus-{{ section.id }}" class="visually-hidden" role="status"></div>
        
        <slider-component id="GalleryViewer-{{ section.id }}" class="slider-mobile-gutter hide-counter">
          
          
          <a class="skip-to-content-link button visually-hidden quick-add-hidden" href="#ProductInfo-{{ section.id }}">
            {{ "accessibility.skip_to_product_info" | t }}
          </a>
          <ul id="Slider-Gallery-{{ section.id }}" class="product__media-list hide-images contains-media grid list-unstyled slider slider--mobile" role="list">
            {%- liquid
              assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src'
              assign media_count = product.media.size
              if section.settings.hide_variants and media_count > 1
                assign media_count = media_count | minus: variant_images.size | plus: 1
              endif

              if section.settings.media_size == 'large'
                assign media_width = 0.65
              elsif section.settings.media_size == 'medium'
                assign media_width = 0.55
              elsif section.settings.media_size == 'small'
                assign media_width = 0.45
              endif
            -%}
            {%- if product.selected_or_first_available_variant.featured_media != null -%}
              {%- assign featured_media = product.selected_or_first_available_variant.featured_media -%}
              <li id="Slide-{{ section.id }}-{{ featured_media.id }}" class="product__media-item grid__item slider__slide is-active{% if featured_media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains featured_media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ featured_media.id }}">
                {%- assign media_position = 1 -%}
                {%- render 'product-badges' with product as productObject -%}
                {% render 'product-thumbnail', nodefer: true, media: featured_media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: false %}
              </li>
            {%- endif -%}
            {%- for media in product.media -%}
              {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
                {%- liquid
                  assign media_position = media_position | default: 0 | plus: 1
                  assign lazy_load = false
                  if media_position > 1
                    assign lazy_load = true
                  endif
                  -%}
                  
                    
                  
                <li id="Slide-{{ section.id }}-{{ media.id }}" {% if media_position == 6 and product.media.size > 6 %}style="position: relative"{% endif %} class="product__media-item {% if media_position == 6 and product.media.size > 6 %}covered show-more{% endif %} grid__item slider__slide{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                  {% if media_position == 1 %}
                    {%- render 'product-badges' with product as productObject -%}
                  {% endif %}
                {% render 'product-thumbnail', nodefer: true, media: media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: lazy_load %}
                </li>
              {%- endunless -%}
            {%- endfor -%}
          </ul>
          
          {% if section.settings.slider_visual != 'none'%}
            <div class="slider-counter slider-counter--{{ section.settings.slider_visual }}{% if section.settings.slider_visual == 'counter' or section.settings.slider_visual == 'numbers' %} caption{% endif %}">
              {%- if section.settings.slider_visual == 'counter' -%}
                <span class="slider-counter--current">1</span>
                <span aria-hidden="true"> / </span>
                <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                <span class="slider-counter--total">{{ section.blocks.size }}</span>
              {%- else-%}
                <div class="slideshow__control-wrapper">
                  {%- for block in section.blocks -%}
                    <button class="slider-counter__link slider-counter__link--{{ section.settings.slider_visual }} link" aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}" aria-controls="Slider-{{ section.id }}">
                      {%- if section.settings.slider_visual == 'numbers' -%}{{ forloop.index }}{% else %}<span class="dot"></span>{%- endif -%}
                    </button>
                  {%- endfor -%}
                </div>
              {%- endif -%}
            </div>
          {% endif %}
          {%- if media_count > 1 and section.settings.gallery_layout != 'stacked' or section.settings.mobile_thumbnails == 'show' -%}
          <div class="slider-buttons no-js-hidden quick-add-hidden{% if media_count < 2 or section.settings.mobile_thumbnails == 'show' %} small-hide medium-hide{% endif %}">
            <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}">{% render 'icon-caret' %}</button>
            <div class="slider-counter caption">
              <span class="slider-counter--current">1</span>
              <span aria-hidden="true"> / </span>
              <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
              <span class="slider-counter--total">{{ media_count }}</span>
            </div>
            <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'general.slider.next_slide' | t }}">{% render 'icon-caret' %}</button>
          </div>
          {%- endif -%}
        </slider-component>
        {%- if first_3d_model -%}
          <button
            class="button button--full-width product__xr-button"
            type="button"
            aria-label="{{ 'products.product.xr_button_label' | t }}"
            data-shopify-xr
            data-shopify-model3d-id="{{ first_3d_model.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr-hidden
          >
            {% render 'icon-3d-model' %}
            {{ 'products.product.xr_button' | t }}
          </button>
        {%- endif -%}
        {%- if media_count > 1 and section.settings.gallery_layout != 'stacked' or section.settings.mobile_thumbnails == 'show' -%}
          <slider-component id="GalleryThumbnails-{{ section.id }}" class="thumbnail-slider slider-mobile-gutter page-width quick-add-hidden{% if section.settings.mobile_thumbnails == 'hide' %} small-hide medium-hide{% endif %}{% if media_count <= 3 %} thumbnail-slider--no-slide{% endif %}">
            <button type="button" class="slider-button slider-button--prev{% if media_count <= 3 %} small-hide medium-hide{% endif %}{% if media_count <= 4 %} medium-hide large-up-hide{% endif %}" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}" aria-controls="GalleryThumbnails-{{ section.id }}" data-step="3">{% render 'icon-caret' %}</button>
            <ul id="Slider-Thumbnails-{{ section.id }}" class="thumbnail-list list-unstyled slider slider--mobile{% if section.settings.gallery_layout == 'thumbnail_slider' %} slider--tablet-up{% endif %}">
              {%- if featured_media != null -%}
                {%- liquid
                  capture media_index
                    if featured_media.media_type == 'model'
                      increment model_index
                    elsif featured_media.media_type == 'video' or featured_media.media_type == 'external_video'
                      increment video_index
                    elsif featured_media.media_type == 'image'
                      increment image_index
                    endif
                  endcapture
                  assign media_index = media_index | plus: 1
                -%}
                <li id="Slide-Thumbnails-{{ section.id }}-0" class="thumbnail-list__item slider__slide {% if media_index == 1 %} active{% endif %}{% if section.settings.hide_variants and variant_images contains featured_media.src %} thumbnail-list_item--variant{% endif %}" data-target="{{ section.id }}-{{ featured_media.id }}" data-media-position="{{ media_index }}">
                  <button class="thumbnail global-media-settings global-media-settings--no-shadow {% if featured_media.preview_image.aspect_ratio > 1 %}thumbnail--wide{% else %}thumbnail--narrow{% endif %}"
                    aria-label="{%- if featured_media.media_type == 'image' -%}{{ 'products.product.media.load_image' | t: index: media_index }}{%- elsif featured_media.media_type == 'model' -%}{{ 'products.product.media.load_model' | t: index: media_index }}{%- elsif featured_media.media_type == 'video' or featured_media.media_type == 'external_video' -%}{{ 'products.product.media.load_video' | t: index: media_index }}{%- endif -%}"
                    aria-current="true"
                    aria-controls="GalleryViewer-{{ section.id }}"
                    aria-describedby="Thumbnail-{{ section.id }}-0"
                  >
                    
                  </button>
                </li>
              {%- endif -%}
              {%- for media in product.media -%}
                {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
                  {%- liquid
                    capture media_index
                      if media.media_type == 'model'
                        increment model_index
                      elsif media.media_type == 'video' or media.media_type == 'external_video'
                        increment video_index
                      elsif media.media_type == 'image'
                        increment image_index
                      endif
                    endcapture
                    assign media_index = media_index | plus: 1
                  -%}
                   <li id="Slide-Thumbnails-{{ section.id }}-{{ forloop.index }}" class="thumbnail-list__item slider__slide{% if media_index == 1 %} active{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} thumbnail-list_item--variant{% endif %}" data-target="{{ section.id }}-{{ media.id }}"  data-media-position="{{ media_index }}">
                    {%- if media.media_type == 'model' -%}
                      <span class="thumbnail__badge" aria-hidden="true">
                        {%- render 'icon-3d-model' -%}
                      </span>
                    {%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}
                      <span class="thumbnail__badge" aria-hidden="true">
                        {%- render 'icon-play' -%}
                      </span>
                    {%- endif -%}
                    <button class="thumbnail global-media-settings global-media-settings--no-shadow {% if media.preview_image.aspect_ratio > 1 %}thumbnail--wide{% else %}thumbnail--narrow{% endif %}"
                      aria-label="{%- if media.media_type == 'image' -%}{{ 'products.product.media.load_image' | t: index: media_index }}{%- elsif media.media_type == 'model' -%}{{ 'products.product.media.load_model' | t: index: media_index }}{%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}{{ 'products.product.media.load_video' | t: index: media_index }}{%- endif -%}"
                      {% if media == product.selected_or_first_available_variant.featured_media or product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} aria-current="true"{% endif %}
                      aria-controls="GalleryViewer-{{ section.id }}"
                      aria-describedby="Thumbnail-{{ section.id }}-{{ forloop.index }}"
                    >
                     
                    </button>
                  </li>
                {%- endunless -%}
              {%- endfor -%}
            </ul>
            <button type="button" class="slider-button slider-button--next{% if media_count <= 3 %} small-hide medium-hide{% endif %}{% if media_count <= 4 %} medium-hide large-up-hide{% endif %}" name="next" aria-label="{{ 'general.slider.next_slide' | t }}" aria-controls="GalleryThumbnails-{{ section.id }}" data-step="3">{% render 'icon-caret' %}</button>
          </slider-component>
        {%- endif -%}
      </media-gallery>
    </div>
    <div class="product__info-wrapper page-width grid__item{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}">
      <div id="ProductInfo-{{ section.id }}" class="product__info-container{% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        {%- assign product_form_id = 'product-form-' | append: section.id -%}

        {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
          {%- when 'countdown' -%}
            {%  if preRelease %}
              {% liquid 
                assign timer_colour = block.settings.timer_colour
                assign timer_size = block.settings.timer_size
                assign day_font_size = block.settings.day_font_size
                assign separator = block.settings.separator
              %}
              
              <style>
                #MainProduct-{{ section.id }} .banner__timer span {
                  color: {{ timer_colour }};
                  font-size: {{ timer_size }}px;
                }

                #MainProduct-{{ section.id }} .banner__timer--block span:first-child {
                  position: relative;
                }
                {% if separator != blank %}
                #MainProduct-{{ section.id }} .banner__timer--block span:first-child:after {
                  position: absolute;
                  content: '{{ separator }}';
                  right: -1ch;
                  top: 0;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  line-height: 1;
                }
                #MainProduct-{{ section.id }} .banner__timer--block:last-child span:first-child:after {
                  content: '';
                }
                {% endif %}
              
                #MainProduct-{{ section.id }} .banner__timer--block span:nth-child(2) {
                  font-size: {{ day_font_size }}px;
                }
              </style>
              <div>
                <h3 class="banner__timer" end-time="{{ releaseTime }}" {{ block.shopify_attributes }}>
                  <div class="banner__timer--block days"><span>XX</span>{% if block.settings.show_days %}<span>Days</span>{% endif %}</div> 
                  <div class="banner__timer--block hours"><span>XX</span>{% if block.settings.show_days %}<span>Hrs</span>{% endif %}</div> 
                  <div class="banner__timer--block minutes"><span>XX</span>{% if block.settings.show_days %}<span>Mins</span>{% endif %}</div> 
                  <div class="banner__timer--block seconds"><span>XX</span>{% if block.settings.show_days %}<span>Secs</span>{% endif %}</div>
                </h3>
              </div>
            {% endif %}
          {%- when 'text' -%}
            <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" style="margin-block: {{ block.settings.vertical_padding }}px;font-size: {{ block.settings.font_size }}px;" {{ block.shopify_attributes }}>
              {{- block.settings.text -}}
            </p>
          {%- when 'title' -%}
            <div class="breadcrumb-wrapper">
              {% render 'dynamic-breadcrumbs', object: product, separator: ' / ', exclude_title: true %}

            </div>

            <div class="product__title" {{ block.shopify_attributes }}>
              <h1 class="h1">{{ productName | escape | upcase }}</h1>
              <a href="{{ product.url }}" class="product__title">
                <h2 class="h1">
                  {{ productName | escape | upcase }}
                </h2>
              </a>
            </div>
            {%- when 'free_shipping_note' -%}
              {% if product.price > settings.progress_bar_threshold %}
                <style>
                  #{{ block.id }} {
                    color: {{ block.settings.text_color }};
                    background: {{ block.settings.background_color }};
                    padding-inline: {{ block.settings.padding_horizontal }}px;
                    padding-block: {{ block.settings.padding_vertical }}px;
                    text-align: {{ block.settings.text_align }};
                  }

                  #{{ block.id }} * {
                    font-family: var(--paragraph-small-regular-family);
                    font-size: var(--paragraph-small-regular-size);
                    line-height: var(--paragraph-small-regular-line-height);
                  }
                </style>
                <div id="{{ block.id }}">{{ block.settings.text }}</div>
              {% endif %}

            {%- when 'additional_colours' -%}
              <style>
                .product__additional-colours {
                  gap: {{ block.settings.additional-colours-gap }}px;
                }
              </style>
              {%- liquid 
                assign variants = product.metafields.utopia.product_references.value
                -%}
                {%- assign variantCount = 1 %}
                {% for variant in variants %}
                  {% assign variantCount = variantCount | plus: 1 %}
                {% endfor %}
               
                
                {%- liquid
                  assign availableVariant = false 
                  for variant in variants 
                    if variant.available 
                    assign availableVariant = true  
                    assign image_height = block.settings.additional-colours-size | divided_by: variant.media[0].aspect_ratio
                    endif 
                  endfor 
                -%}

                {%- liquid
                  assign products_to_display = variantCount
                
                  assign columns_mobile_int = 4
                  assign columns_desktop = 6
                  assign show_mobile_slider = false
                  if products_to_display > columns_mobile_int
                    assign show_mobile_slider = true
                  endif
                
                  assign show_desktop_slider = false
                  if products_to_display > columns_desktop
                    assign show_desktop_slider = true
                  endif
                -%}

                <p class="product__title-colour buttons-small-regular">{{product.metafields.utopia.colour_name}}</p>
                {%- if variants -%} 
                {% if availableVariant %} 
                  <slider-component  class="slider-mobile-gutter{% if show_desktop_slider %} slider-component-desktop{% endif %} additional-colours__slider">
                    <ul id="Slider-{{ section.id }}" class="grid product__additional-colours contains-card contains-card--standard grid--{{ columns_desktop }}-col-desktop grid--{{ columns_desktop | plus: 2 }}-col-tablet grid--{{ columns_desktop | plus: 2 }}-col-tablet-down{% if show_mobile_slider or show_desktop_slider %} slider{% if show_desktop_slider %} slider--desktop{% endif %}{% if show_mobile_slider %} slider--tablet{% endif %}{% endif %}" role="list" aria-label="Additional Colours">
                      <li id="Slide-{{ section.id }}-{{ forloop.index }}" class="current-product-color grid__item{% if show_mobile_slider or show_desktop_slider %} slider__slide{% endif %}">
                        <a href="{{ product.url }}">
                          {{ product.media[0] | image_url: width: block.settings.additional-colours-size, height: image_height | image_tag: alt: product.title }}
                              {%- if product.media[1] != nil -%}
                                {{ product.media[1] | image_url: width: block.settings.additional-colours-size, height: image_height | image_tag: alt: product.title, class: "additional-colour-hover" }}
                              {%- endif -%}
                        </a>
                      </li>
                      {% for variant in variants %}
                        <li id="Slide-{{ section.id }}-{{ forloop.index }}" class="grid__item{% if show_mobile_slider or show_desktop_slider %} slider__slide{% endif %}">
                          <a href="{{ variant.url }}" alt="{{ variant.title }}">
                            {{ variant.media[0] | image_url: width: block.settings.additional-colours-size, height: image_height | image_tag: alt: variant.title }}
                            {%- if variant.media[1] != nil -%}
                              {{ variant.media[1] | image_url: width: block.settings.additional-colours-size, height: image_height | image_tag: alt: variant.title, class: "additional-colour-hover" }}
                            {%- endif -%}
                          </a>
                        </li>
                      {%- endfor -%}
                    </ul>
                    {%- if show_mobile_slider or show_desktop_slider -%}
                      <div class="slider-buttons no-js-hidden{% unless section.settings.show_slide_counter == true %} hide-counter{% endunless %}{% unless section.settings.arrows_on_mobile %} small-hide medium-hide{% endunless %}">
                        <button type="button" class="slider-button slider-button--prev btn button--solid-white" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}" aria-controls="Slider-{{ section.id }}">{% render 'icon-caret' %}</button>
                        <button type="button" class="slider-button slider-button--next btn button--solid-white" name="next" aria-label="{{ 'general.slider.next_slide' | t }}" aria-controls="Slider-{{ section.id }}">{% render 'icon-caret' %}</button>
                      </div>
                    {%- endif -%}
                  </slider-component>
              
                {% endif %}
              {% endif %}
            {% comment %}END CUSTOM Additional colours block {% endcomment %}
          {%- when 'size_guide'-%}
            <modal-opener class="size-guide-link" data-modal="#size-guide">
              <button class="product-popup-modal__button link button--primary" type="button" aria-haspopup="dialog">{%- render 'icon-tape' -%} Size guide</button>
            </modal-opener>
          {%- when 'promoline'-%}
            {% render 'promo-line-reebok' %}
          {%- when 'promoted-product' -%}
            {% render 'promoted-product' with block as block %}
          
          {%- when 'payment_options'%}
            {% assign data = block.settings %}
            {% render 'payment-options' with data as block %}
          {%- when 'price' -%}
            <div class="no-js-hidden product__price-wrapper" id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
              {%- render 'price', product: product, use_variant: true, show_badges: false, price_class: 'price--large' -%}
            </div>
            
            <div {{ block.shopify_attributes }}>
              {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
              {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {{ form | payment_terms }}
              {%- endform -%}
            </div>
          {%- when 'description' -%}
            {%- if product.description != blank -%}
              <div class="product__accordion accordion" {{ block.shopify_attributes }}>
                <details id="Details-{{ block.id }}-{{ section.id }}" open>
                  <summary expanded="true">
                    <div class="summary__title">
                      <h2 class="h4 accordion__title">
                        Description
                      </h2>
                    </div>
                    {% render 'icon-caret' %}
                  </summary>
                </details>
                <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                  {{ product.description }}
                </div>
              </div>
            {%- endif -%}
          {%- when 'custom_liquid' -%}
            {{ block.settings.custom_liquid }}
          {%- when 'collapsible_tab' -%}
            <div class="product__accordion accordion" {{ block.shopify_attributes }}>
              <details id="Details-{{ block.id }}-{{ section.id }}">
                <summary>
                  <div class="summary__title">
                    {% render 'icon-accordion', icon: block.settings.icon %}
                    <h2 class="h4 accordion__title">
                      {{ block.settings.heading | default: block.settings.page.title }}
                    </h2>
                  </div>
                  {% render 'icon-caret' %}
                </summary>
              </details>
              <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                {{ block.settings.content }}
                {{ block.settings.page.content }}
              </div>
            </div>
          {%- when 'bullet_points' -%}
            <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
              <details id="Details-{{ block.id }}-{{ section.id }}">
                <summary>
                  <div class="summary__title">
                    {% render 'icon-accordion', icon: block.settings.icon %}
                    <h2 class="h4 accordion__title">
                      {{ block.settings.heading | default: block.settings.page.title }}
                    </h2>
                  </div>
                  {% render 'icon-caret' %}
                </summary>
                
              </details>
              <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                <ul>
                  {% for bullet in product.metafields.utopia.bullets.value %}
                    <li>{{ bullet }}</li>
                  {% endfor %}
                  <li>Product Code: {{ product.metafields.utopia.colour_code }} / {{ product.metafields.utopia.supplier_code }}</li>
                  <li>Country Of Origin: {{ product.metafields.utopia.coo }}</li>
                </ul>
                
              </div>
            </div>
          {%- when 'quantity_selector' -%}
            {%- unless preRelease -%}
              <div class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}" {{ block.shopify_attributes }}>
                <label class="form__label" for="Quantity-{{ section.id }}-2">
                  {{ 'products.product.quantity.label' | t }}
                </label>

                <quantity-input class="quantity">
                  <button class="quantity__button no-js-hidden" name="minus" type="button">
                    <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                    {% render 'icon-minus' %}
                  </button>
                  <input class="quantity__input"
                      type="number"
                      name="quantity"
                      id="Quantity-{{ section.id }}-2"
                      min="1"
                      value="1"
                      form="{{ product_form_id }}"
                    >
                  <button class="quantity__button no-js-hidden" name="plus" type="button">
                    <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                    {% render 'icon-plus' %}
                  </button>
                </quantity-input>
              </div>
            {%- endunless -%}
          {%- when 'popup' -%}
              <modal-opener class="product-popup-modal__opener no-js-hidden quick-add-hidden" data-modal="#PopupModal-{{ block.id }}" {{ block.shopify_attributes }}>
                <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button link" type="button" aria-haspopup="dialog">{{ block.settings.text | default: block.settings.page.title }}</button>
              </modal-opener>
              <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">{{ block.settings.text }}</a>
          {%- when 'share' -%}
            <share-button id="Share-{{ section.id }}" class="share-button quick-add-hidden" {{ block.shopify_attributes }}>
              <button class="share-button__button buttons-small-regular hidden">
                {% render 'icon-share' %}
                {{ block.settings.share_label | escape }}
              </button>
              <details id="Details-{{ block.id }}-{{ section.id }}">
                <summary class="share-button__button buttons-small-regular">
                  {% render 'icon-share' %}
                  {{ block.settings.share_label | escape }}
                </summary>
                <div id="Product-share-{{ section.id }}" class="share-button__fallback motion-reduce">
                  <div class="field">
                    <span id="ShareMessage-{{ section.id }}" class="share-button__message hidden" role="status">
                    </span>
                    <input type="text"
                          class="field__input"
                          id="url"
                          value="{{ product.selected_variant.url | default: product.url | prepend: request.origin }}"
                          placeholder="{{ 'general.share.share_url' | t }}"
                          onclick="this.select();"
                          readonly
                    >
                    <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                  </div>
                  <button class="share-button__close hidden no-js-hidden">
                    {% render 'icon-close' %}
                    <span class="visually-hidden">{{ 'general.share.close' | t }}</span>
                  </button>
                  <button class="share-button__copy no-js-hidden">
                    {% render 'icon-clipboard' %}
                    <span class="visually-hidden">{{ 'general.share.copy_to_clipboard' | t }}</span>
                  </button>
                </div>
              </details>
            </share-button>
            <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
          {%- when 'variant_picker' -%}
            
            {% unless preRelease %}
              {%- unless product.has_only_default_variant -%}
                {%- if block.settings.picker_type == 'button' -%}
                  <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                      {%- for option in product.options_with_values -%}
                          {% if option.values.size > 1 %}
                            {% assign gender = product.metafields.utopia.gender | downcase %}
                            {% assign division = product.metafields.utopia.division | downcase %}
                            {% assign genderedSizing = false %}
                            {% if gender contains 'mens' or gender contains 'unisex' %}
                              {% if division == 'footwear' %}
                                {% assign genderedSizing = true %}
                              {% endif %}
                            {% endif %}
                            <modal-opener class="size-guide-link" data-modal="#size-guide">
                              <button class="btn button--text button--size-small" type="button" aria-haspopup="dialog">Size Guide</button>
                            </modal-opener>
                            <fieldset class="js product-form__input">
                              
                              <legend class="form__label size__label">
                                
                                  Sizes {% if division == 'footwear' %}(US){% endif %}
                                
                                
                                  {% if genderedSizing %}
                                  <ul class="tabs gender__tab hidden">
                                    <li class="tab{% if gender == 'womens' %} active-label{% endif %}" data-gender="womens"><label for="tab-{{  product.id }}-womens">Womens Sizing</label></li>
                                    <li class="tab{% if gender != 'womens' %} active-label{% endif %}" data-gender="mens"><label for="tab-{{  product.id }}-mens">Mens Sizing</label></li>
                                  </ul>
                                  {% endif %}
                              </legend>
                              {%- for value in option.values -%}

                                {% comment %}  if there isn't a / in the value, add value as normal
                                If there is a /, split on /, the first value is mens, so remove 'M' characters and strip whitespace
                                the second value is womens, so remove 'W' characters and strip whitespace

                                render the mens sizing as value, store both as data attributes on the label so we can tab between
                                {% endcomment %}

                                {%  liquid 
                                  assign genderArray = value | split: '/'
                                  assign mens = genderArray[0] | strip | replace: 'M', '' | strip
                                  assign womens = genderArray[1] | strip | replace: 'W', '' | strip
                                %}
                                <input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                      name="{{ option.name }}"
                                      value="{{ value | escape }}"
                                      form="{{ product_form_id }}"
                                      {% if option.selected_value == value %}checked{% endif %}
                                >

                                {% if genderedSizing %}
                                  <label data-mens="{{ mens }}" data-womens="{{ womens }}" for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                                    {% if womens != blank %}
                                      {% if gender == 'womens' %}{{ womens }}{% else %}{{ mens }}{% endif %}
                                      {% else %}
                                        {{ value }}
                                    {% endif %}
                                  </label>
                                {% else %}
                                  <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">{{ value | replace: "US ", "" }}</label>
                                {% endif %}
                              {%- endfor -%}
                            </fieldset>
                          {% endif %}
                      {%- endfor -%}
                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  </variant-radios>
                  
                {%- else -%}
                  <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                    {%- for option in product.options_with_values -%}
                      <div class="product-form__input product-form__input--dropdown">
                        <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                          {{ option.name }}
                        </label>
                        <div class="select">
                          <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                            class="select__select"
                            name="options[{{ option.name | escape }}]"
                            form="{{ product_form_id }}"
                          >
                            {%- for value in option.values -%}
                              <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                                {{ value }}
                              </option>
                            {%- endfor -%}
                          </select>
                          {% render 'icon-caret' %}
                        </div>
                      </div>
                    {%- endfor -%}

                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  </variant-selects>
                {%- endif -%}
              {%- endunless -%}
            
              <noscript class="product-form__noscript-wrapper-{{ section.id }}">
                <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                  <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                  <div class="select">
                    <select name="id" id="Variants-{{ section.id }}" class="select__select" form="{{ product_form_id }}">
                      {%- for variant in product.variants -%}
                        <option
                          {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                          {% if variant.available == false %}disabled{% endif %}
                          value="{{ variant.id }}"
                        >
                          {{ variant.title }}
                          {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                          - {{ variant.price | money | strip_html }}
                        </option>
                      {%- endfor -%}
                    </select>
                    {% render 'icon-caret' %}
                  </div>
                </div>
              </noscript>
            {% endunless %}
            {% if preRelease and preReleaseMessage != blank %}
              {% render 'pre-release-reebok' %}
            {% endif %}
          {%- when 'buy_now_pay_later' -%}
            {%- unless preRelease -%}
              <style>
                .buy-now-pay-later {
                  margin-top: {{ block.settings.top_margin }}px;
                  padding-inline: {{ block.settings.inline_padding }}px;
                  font-size: {{ block.settings.font_size }}px;
                }
              </style>
              <div class="buy-now-pay-later paragraph-small-regular">
                  <span><strong>Buy Now, Pay Later</strong> with 4 payments of {{ product.price | divided_by: 4 | money }}.</span>
              </div>
            {%- endunless -%}

          {%- when 'buy_buttons' -%}
            <div {{ block.shopify_attributes }}>
              <product-form class="product-form">
                <div class="product-form__error-message-wrapper" role="alert" hidden>
                  <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-error" viewBox="0 0 13 13">
                    <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
                    <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
                    <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
                    <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
                  </svg>
                  <span class="product-form__error-message"></span>
                </div>

                {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" disabled>
                  <div class="product-form__buttons">
                    <div class="add-to-cart__wrapper">
                    <button
                      type="submit"
                      name="add"
                      class="product-form__submit btn button--solid button--size-medium"
                      {% if product.selected_or_first_available_variant.available == false or preRelease == true %}disabled{% endif %}
                    >
                      {% render 'icon-cart' %} 
                        <span>
                          {%- if product.selected_or_first_available_variant.available and preRelease != true -%}
                            {{ 'products.product.add_to_cart' | t }}
                          {%- elsif preRelease == true -%}
                          Available {{ product.metafields.custom.release_date | date: '%d/%m %l:%M%P %Z' }}
                          {%- else -%}
                            {{ 'products.product.sold_out' | t }}
                          {%- endif -%}
                        </span>
                        <div class="loading-overlay__spinner hidden">
                          <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                          </svg>
                        </div>
                    </button>
                    
                    <!-- Swym button on product pages -->
                    <div class="swym-wishlist-button-bar"></div>
                    </div>
                    <!-- Swym button on product pages -->
                    {%- if block.settings.show_dynamic_checkout and preRelease != true-%}
                      {{ form | payment_button }}
                    {%- endif -%}
                    
                  </div>
                {%- endform -%}
              </product-form>


              {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

              {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

              <pickup-availability class="product__pickup-availabilities no-js-hidden quick-add-hidden"
                {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                data-root-url="{{ routes.root_url }}"
                data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                data-has-only-default-variant="{{ product.has_only_default_variant }}"
              >
                <template>
                  <pickup-availability-preview class="pickup-availability-preview">
                    {% render 'icon-unavailable' %}
                    <div class="pickup-availability-info">
                      <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                      <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                    </div>
                  </pickup-availability-preview>
                </template>
              </pickup-availability>
            </div>

            <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
          {%- when 'rating' -%}
            {%- if product.metafields.reviews.rating.value != blank -%}
              {% liquid
               assign rating_decimal = 0
               assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
               if decimal >= 0.3 and decimal <= 0.7
                assign rating_decimal = 0.5
              elsif decimal > 0.7
                assign rating_decimal = 1
               endif
              %}
              <div class="rating" role="img" aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}">
                <span aria-hidden="true" class="rating-star color-icon-{{ settings.accent_icons }}" style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"></span>
              </div>
              <p class="rating-text caption">
                <span aria-hidden="true">{{ product.metafields.reviews.rating.value }} / {{ product.metafields.reviews.rating.value.scale_max }}</span>
              </p>
              <p class="rating-count caption">
                <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                <span class="visually-hidden">{{ product.metafields.reviews.rating_count }} {{ "accessibility.total_reviews" | t }}</span>
              </p>
            {%- endif -%}
          {%- endcase -%}
        {%- endfor -%}
        <a href="{{ product.url }}" class="link product__view-details animate-arrow">
          {{ 'products.product.view_full_details' | t }}
          {% render 'icon-arrow' %}
        </a>
      </div>
    </div>

  </div>
  
  <product-modal id="ProductModal-{{ section.id }}" class="product-media-modal media-modal">
    <div class="product-media-modal__dialog" role="dialog" aria-label="{{ 'products.modal.label' | t }}" aria-modal="true" tabindex="-1">
      <button id="ModalClose-{{ section.id }}" type="button" class="product-media-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>

      <div class="product-media-modal__content gradient" role="document" aria-label="{{ 'products.modal.label' | t }}" tabindex="0">
        {%- liquid
          if product.selected_or_first_available_variant.featured_media != null
            assign media = product.selected_or_first_available_variant.featured_media
            render 'product-media', nodefer: true, media: media, loop: section.settings.enable_video_looping, variant_image: section.settings.hide_variants
          endif
        -%}

        {%- for media in product.media -%}
          {%- liquid
            if section.settings.hide_variants and variant_images contains media.src
              assign variant_image = true
            else
              assign variant_image = false
            endif

            unless media.id == product.selected_or_first_available_variant.featured_media.id
              render 'product-media', nodefer: true, media: media, loop: section.settings.enable_video_looping, variant_image: variant_image
            endunless
          -%}
        {%- endfor -%}
      </div>
    </div>
  </product-modal>

  {% assign popups = section.blocks | where: "type", "popup" %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div role="dialog" aria-label="{{ block.settings.text }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
        <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}

  {% if section.settings.pwp-collection != blank %}
  <modal-dialog id="product-with-purchase" data-view-max="{{ settings.pwp_view_count }}" class="product-popup-modal" {{ block.shopify_attributes }}>
    <div role="dialog" aria-label="product-with-purchase" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
      <button id="ModalClose-product-with-purchase" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}
      </button>
        {% render 'product-with-purchase' with section as section %}
      </div>
  </modal-dialog>
  {% endif %}

  {%- if product.media.size > 0 -%}
    <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- if first_3d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {%- endif -%}


  <modal-dialog id="size-guide" class="product-popup-modal" {{ block.shopify_attributes }}>
    <div role="dialog" aria-label="size-guide" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
      <button id="ModalClose-sizeGuide" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
      {% render 'size-guide' with product.metafields.utopia.size_guide as size-guide %}       
      </div>
  </modal-dialog>


<script>

  function storeProductData() {
    const productData = {
      id: '{{ product.id }}',
      handle: '{{ product.handle }}'
    }
    let recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed')) || [];
    const productIndex = recentlyViewed.findIndex(product => product.id === productData.id);
    if (productIndex !== -1) {
      recentlyViewed.splice(productIndex, 1);
    }
    recentlyViewed.unshift(productData);
    if (recentlyViewed.length > 24) {
      recentlyViewed.pop();
    }
    localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));
  }

  storeProductData();

{% comment %} 
  const searchspringRecommendationsPayload = {
    tags: '[{{ section.settings.searchspring_tags }}]',
    product: '{{ product.id }}',
    categories: [{% for collection in product.collections %}'{{ collection.id }}',{% endfor %}],
    shopper: '{{ customer.id }}',
    cart: [{% for item in cart.items %}'{{ item.product.id }}',{% endfor %}],
    lastViewed: getRecentlyViewedProducts(),
    limit: {{ section.settings.related_products_limit }}
  } {% endcomment %}

</script>


  <script>
    (function() {
      const timer = document.querySelector('.banner__timer');

      if (!timer) return;
      const releaseTime = timer.getAttribute('end-time');
      const days = document.querySelector('.banner__timer--block.days span');
      const hours = document.querySelector('.banner__timer--block.hours span');
      const minutes = document.querySelector('.banner__timer--block.minutes span');
      const seconds = document.querySelector('.banner__timer--block.seconds span');
      {% comment %} Release time in this format: 2024-03-21T22:00:00Z {% endcomment %}
      const intRelease = parseInt(releaseTime) * 1000;
      
      function updateTimer() {

        const currentTime = new Date().getTime();
        const timeLeft = intRelease - currentTime;

        if (timeLeft <= 0) {
          timer.style.display = "none";
          location.reload();
          return;
        }
        // Calculate the distance between now and intRelease
        let distance = Math.abs(timeLeft);


        const daysLeft = String(Math.floor(distance / (1000 * 60 * 60 * 24))).padStart(2, '0');
        const hoursLeft = String(Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))).padStart(2, '0');
        const minutesLeft = String(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))).padStart(2, '0');
        const secondsLeft = String(Math.floor((distance % (1000 * 60)) / 1000)).padStart(2, '0');
  
        days.textContent = daysLeft;
        hours.textContent = hoursLeft;
        minutes.textContent = minutesLeft;
        seconds.textContent = secondsLeft;
  
        if (timeLeft <= 0) {
          timer.style.display = "none";
          return;
        }
      }
  
      setInterval(updateTimer, 1000);
    })()


    function bvDisplay() {
      const priceWrapper = document.querySelector('.product__price-wrapper');
      const appBlock = document.querySelector('[data-bv-show="rating_summary"]');

      if (!appBlock) return;
      priceWrapper.appendChild(appBlock);
    
    }
    

    function setAvailableSizes() {

      try {
        const variantData = JSON.parse(document.querySelector('variant-radios [type="application/json"]').textContent);
      
        variantData.forEach((variant) => {
          if (variant.available) return;
          const inputs = document.querySelectorAll(`input[value="${variant.option1}"]`)
          inputs.forEach((input) => {
            input.setAttribute('disabled', 'disabled');
          })
        })
      } catch (e) {
        {% comment %} Not variant radios, most likely pre-release product {% endcomment %}
      }
      
    }

    document.addEventListener('DOMContentLoaded', () => {
      bvDisplay()

      {% if section.settings.gallery_layout == "stacked" %}
        {% comment %} const showMore = document.querySelector('.show-more')
        showMore.addEventListener('click', function() {
          const gallery = document.querySelector('.hide-images')
          gallery.classList.remove('hide-images')
          showMore.style.display = "none";
        }) {% endcomment %}
      {% endif %}
      setAvailableSizes();
    });

    document.addEventListener('DOMContentLoaded', function() {
      function isIE() {
        const ua = window.navigator.userAgent;
        const msie = ua.indexOf('MSIE ');
        const trident = ua.indexOf('Trident/');

        return (msie > 0 || trident > 0);
      }

      if (!isIE()) return;
      const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
      const noScriptInputWrapper = document.createElement('div');
      const variantSwitcher = document.querySelector('variant-radios[data-section="{{ section.id }}"]') || document.querySelector('variant-selects[data-section="{{ section.id }}"]');
      noScriptInputWrapper.innerHTML = document.querySelector('.product-form__noscript-wrapper-{{ section.id }}').textContent;
      variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

      document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function(event) {
        hiddenInput.value = event.currentTarget.value;
      });
    });


    document.addEventListener("DOMContentLoaded", function() {

      showGenderTabs();
      const showMoreButton = document.querySelector(".show-more");
      const imageElements = document.querySelectorAll(".product__media-item");
      if (!showMoreButton) return;
      showMoreButton.addEventListener("click", function(e) {
        e.preventDefault();
        e.stopImmediatePropagation();
        // Remove the 'show-more' class from the button
        showMoreButton.classList.remove('show-more', 'covered');
        // Loop through the image elements starting from the 7th (index 6) and toggle their visibility
        for (let i = 6; i < imageElements.length; i++) {
          if (imageElements[i].style.display === "none" || imageElements[i].style.display === "") {
            imageElements[i].style.display = "block";
          }
        }
      });
    });

    function showGenderTabs() {
      const isGenderedProduct = document.querySelector('[data-mens]');
      if (!isGenderedProduct) return
      const genderTabs = document.querySelector('.gender__tab').classList.remove('hidden');
      genderTabsListener()
    }

    function genderTabsListener(){
      const tabWrapper = document.querySelector('.gender__tab');
      const tabs = document.querySelectorAll('.product-form__input .tab');
      const labels = document.querySelectorAll('.product-form__input .tab label');
      tabs.forEach(tab => {
        tab.addEventListener('click', (e) => {
          const li = e.target.closest('li') || e.target;
          const gender = li.getAttribute('data-gender');
          tabs.forEach(tab => tab.classList.remove('active-label'));
          tab.classList.add('active-label');
          const inputLabels = document.querySelectorAll('.product-form__input [data-mens]')
          inputLabels.forEach(label => {
            label.innerHTML = label.getAttribute(`data-${gender}`);
          })
        })
      })
    }

    {% comment %} if urlparams contain id, set to scrollPosition {% endcomment %}
    const urlParams = new URLSearchParams(window.location.search);
    const id = urlParams.get('id');
    if (id) {
      sessionStorage.setItem('scrollPosition', id);
    } else {
      sessionStorage.removeItem('scrollPosition');
    }

    {% comment %} remove param from url {% endcomment %}

    const url = new URL(window.location.href);
    url.searchParams.delete('id');
    window.history.replaceState({}, document.title, url);



  </script>

  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
  -%}

</section>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section product-page",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "promoted-product",
      "name": "Promoted Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        }
      ]
    },
    {
      "type": "countdown",
      "name": "Countdown",
      "settings": [
            {
              "type": "number",
              "id": "timer_size",
              "label": "Font Size",
              "default": 16
            },
            {
              "type": "checkbox",
              "id": "show_days",
              "default": true,
              "label": "Show Days, Hours, Mins, Secs"
            },
            {
              "type": "number",
              "id": "day_font_size",
              "label": "Font Size (Days, Hours, Mins, Secs)",
              "default": 14
            },
            {
              "type": "text",
              "id": "separator",
              "label": "Separator",
              "default": ":",
              "info": "Leave blank for no separator"
            },
            {
              "type": "color",
              "id": "timer_colour",
              "label": "Text Color",
              "default": "#000000"
            }
          ]
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "number",
          "id": "vertical_padding",
          "default": 0,
          "label": "Vertical Padding"
        },
        {
          "type": "number",
          "id": "font_size",
          "default": 16,
          "label": "Font Size"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_now_pay_later",
      "name": "Buy Now Pay Later",
      "limit": 1,
      "settings": [
        {
          "type": "number",
          "id": "top_margin",
          "default": 0,
          "label": "Top Margin"
        },
        {
          "type": "number",
          "id": "inline_padding",
          "default": 0,
          "label": "Inline Padding"
        },
        {
          "type": "number",
          "id": "font_size",
          "default": 16,
          "label": "Font Size"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": false,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "size_guide",
      "name": "Size guide",
      "settings" : []
    },
    {
      "type": "free_shipping_note",
      "name": "Free Shipping note",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Free Shipping Text",
          "default": "<p>Add this product to cart to earn free shipping!</p>"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color"
        },
        {
          "type": "color_background",
          "id": "background_color",
          "label": "Background Color"
        },
        {
          "type": "number",
          "id": "padding_horizontal",
          "label": "Horizontal Padding",
          "default": 0
        },
        {
          "type": "number",
          "id": "padding_vertical",
          "label": "Vertical Padding",
          "default": 0
        },
        {
          "type": "select",
          "id": "text_align",
          "label": "Text Align",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        }
      ]
    },
    {
      "type": "additional_colours",
      "name": "Additional Colours",
      "settings": [
        {
          "type": "range",
          "id": "additional-colours-gap",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Image gap",
          "default": 10
        },
        {
          "type": "range",
          "id": "additional-colours-size",
          "min": 0,
          "max": 200,
          "step": 2,
          "unit": "px",
          "label": "Image Size",
          "default": 96
        }
      ]
    },
    {
      "type": "promoline",
      "name": "Promo Line",
      "settings" : []
    },
    {
      "type": "payment_options",
      "name": "Payment Options",
      "settings": [
        {
          "type": "checkbox",
          "id": "afterpay",
          "label": "Afterpay",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "zippay",
          "label": "Zip pay",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "openpay",
          "label": "Open pay",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "paypal",
          "label": "Pay Pal",
          "default": true
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible row",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "bullet_points",
      "name": "Bullet points",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible row",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "text",
      "id": "pwp-title",
      "label": "Add to cart popup title"
    },
    {
      "type": "richtext",
      "id": "pwp-description",
      "label": "Add to cart popup description"
    },
    {
      "type": "collection",
      "id": "pwp-collection",
      "label": "Add to cart popup collection"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label",
      "info": "t:sections.main-product.settings.media_size.info"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}